{"version":3,"sources":["App.module.css","components/Notification/Notification.module.css","redux/phonebook/phonebook-actions.js","components/Notification/Notification.js","components/Contactform/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducers.js","redux/phonebook/store.js","index.js","components/ContactList/ContactList.module.css","components/Contactform/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","Notification","sameContact","className","styles","ContactForm","state","name","number","alert","handleContact","event","currentTarget","value","setState","handleSubmit","preventDefault","checkContact","contact","id","shortid","generate","props","clearInput","contacts","length","find","toLowerCase","alertState","setTimeout","Container","type","this","onChange","FormInput","onClick","FormBtn","CSSTransition","in","timeout","classNames","enter","ContactFormNotificationFadeEnter","enterActive","ContactFormNotificationFadeEnterActive","exit","ContactFormNotificationFadeExit","exitActive","ContactFormNotificationFadeExitActive","unmountOnExit","Component","connect","items","dispatch","phonebookAction","filter","FilterFadeEnter","FilterFadeEnterActive","FilterFadeExit","FilterFadeExitActive","InputContainer","FilterHeader","FilterInput","filteredElements","normalizedFilter","includes","filteredContacts","resetFilter","TransitionGroup","component","classnames","ListContainer","map","ContactListItemFadeEnter","ContactListItemFadeEnterActive","ContactListItemFadeExit","ContactListItemFadeExitActive","Contact","ContactInfo","DeleteBtn","App","appear","HeaderFadeAppear","appearActive","HeaderFadeAppearActive","createReducer","actions","payload","combineReducers","phonebookPersistConfig","storage","key","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.51ad56d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__1-2fn\",\"HeaderFadeAppear\":\"App_HeaderFadeAppear__3E4mt\",\"HeaderFadeAppearActive\":\"App_HeaderFadeAppearActive__2fiqr\",\"ContactListFadeEnter\":\"App_ContactListFadeEnter__3dAJ3\",\"ContactListFadeEnterActive\":\"App_ContactListFadeEnterActive__DwQqA\",\"ContactListFadeExit\":\"App_ContactListFadeExit__vDFe7\",\"ContactListFadeExitActive\":\"App_ContactListFadeExitActive__3LjRR\",\"ContactListFadeAppear\":\"App_ContactListFadeAppear__2dl2Q\",\"ContactListFadeAppearActive\":\"App_ContactListFadeAppearActive__DMDdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__5FXDT\",\"FormBtn\":\"Notification_FormBtn__161H0\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst addContact = createAction('contact/add')\r\nconst deleteContact = createAction('contact/delete')\r\nconst changeFilter = createAction('contact/changeFilter')\r\n\r\nexport default { addContact, deleteContact, changeFilter }\r\n","import React, { Component } from 'react'\r\nimport styles from './Notification.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nNotification.propTypes = {\r\n    sameContact: PropTypes.string.isRequired,\r\n}\r\n\r\nfunction Notification({ sameContact }) {\r\n    return (\r\n        <div className={styles.Notification}>\r\n            <h2>{sameContact} is already in contacts</h2>\r\n            <h3>Please check name and try again</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport phonebookAction from '../../redux/phonebook/phonebook-actions'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport './ContactForm.css'\r\nimport Notification from '../Notification/Notification'\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {}\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.addContact(contact)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (this.props.contacts.length == 0) {\r\n            return\r\n        } else if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() ===\r\n                        this.state.name.toLowerCase() &&\r\n                    contact.number.toLowerCase() ===\r\n                        this.state.number.toLowerCase()\r\n                )\r\n            })\r\n        ) {\r\n            this.setState({ alert: true })\r\n            this.alertState()\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        setTimeout(() => {\r\n            this.setState({ alert: false })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.handleSubmit}\r\n                    className={styles.FormBtn}\r\n                >\r\n                    Add contact\r\n                </button>\r\n                <CSSTransition\r\n                    in={this.state.alert}\r\n                    timeout={250}\r\n                    classNames={{\r\n                        enter: styles.ContactFormNotificationFadeEnter,\r\n                        enterActive:\r\n                            styles.ContactFormNotificationFadeEnterActive,\r\n                        exit: styles.ContactFormNotificationFadeExit,\r\n                        exitActive:\r\n                            styles.ContactFormNotificationFadeExitActive,\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <Notification sameContact={this.state.name}></Notification>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addContact: (contact) => dispatch(phonebookAction.addContact(contact)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport phonebookAction from '../../redux/phonebook/phonebook-actions'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './Filter.module.css'\r\n\r\nfunction Filter({ contacts, value, filter }) {\r\n    return (\r\n        <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={{\r\n                enter: styles.FilterFadeEnter,\r\n                enterActive: styles.FilterFadeEnterActive,\r\n                exit: styles.FilterFadeExit,\r\n                exitActive: styles.FilterFadeExitActive,\r\n            }}\r\n        >\r\n            <div className={styles.Container}>\r\n                <label className={styles.InputContainer}>\r\n                    <span className={styles.FilterHeader}>\r\n                        Find contacts by Name\r\n                    </span>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={filter}\r\n                        className={styles.FilterInput}\r\n                    />\r\n                </label>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst resetFilter = (state) => {\r\n    if (state.length == 2) {\r\n        return ''\r\n    } else {\r\n        return state.contacts.filter\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n    value: state.contacts.filter,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    filter: (event) =>\r\n        dispatch(phonebookAction.changeFilter(event.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport Filter from '../Filter/Filter'\r\nimport phonebookAction from '../../redux/phonebook/phonebook-actions'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nimport './ContactList.css'\r\n\r\nconst ContactList = ({\r\n    filteredContacts,\r\n    deleteContact,\r\n    resetFilter,\r\n    contacts,\r\n}) => (\r\n    <div className={styles.Container}>\r\n        <TransitionGroup component=\"ul\" classnames={styles.ListContainer}>\r\n            {filteredContacts.map((contact) => (\r\n                <CSSTransition\r\n                    timeout={250}\r\n                    classNames={{\r\n                        enter: styles.ContactListItemFadeEnter,\r\n                        enterActive: styles.ContactListItemFadeEnterActive,\r\n                        exit: styles.ContactListItemFadeExit,\r\n                        exitActive: styles.ContactListItemFadeExitActive,\r\n                    }}\r\n                    key={contact.id}\r\n                >\r\n                    <li className={styles.Contact}>\r\n                        <span className={styles.ContactInfo}>\r\n                            {contact.name} : {contact.number}\r\n                        </span>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                deleteContact(contact.id)\r\n                                if (contacts.length == 2) {\r\n                                    resetFilter()\r\n                                }\r\n                            }}\r\n                            className={styles.DeleteBtn}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    </div>\r\n)\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst filteredElements = (filter, contacts) => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter)\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { filter, items } }) => ({\r\n    filteredContacts: filteredElements(filter, items),\r\n    resetFilter: filter,\r\n    contacts: items,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteContact: (id) => {\r\n        dispatch(phonebookAction.deleteContact(id))\r\n    },\r\n    resetFilter: () => {\r\n        dispatch(phonebookAction.changeFilter(''))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { CSSTransition } from 'react-transition-group'\nimport ContactForm from './components/Contactform/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport styles from './App.module.css'\nimport './App.css'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className={styles.Container}>\n                <CSSTransition\n                    in={true}\n                    appear={true}\n                    timeout={500}\n                    classNames={{\n                        appear: styles.HeaderFadeAppear,\n                        appearActive: styles.HeaderFadeAppearActive,\n                    }}\n                >\n                    <h1>Phonebook</h1>\n                </CSSTransition>\n\n                <ContactForm />\n\n                <CSSTransition\n                    in={this.props.contacts.length >= 1}\n                    timeout={0}\n                    unmountOnExit\n                >\n                    <Filter />\n                </CSSTransition>\n                <CSSTransition\n                    in={this.props.contacts.length > 0}\n                    timeout={250}\n                    unmountOnExit\n                >\n                    <ContactList />\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts.items,\n})\n\nexport default connect(mapStateToProps, null)(App)\n","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport actions from './phonebook-actions'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n})\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (state, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport phoneBookReducer from '../phonebook/phonebook-reducers'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\n\r\nconst persistConfig = {\r\n    key: 'myRoot',\r\n    storage,\r\n}\r\n\r\nconst phonebookPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n]\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(phonebookPersistConfig, phoneBookReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor }\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/phonebook/store'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate loading={'Loading'} persistor={store.persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.querySelector('#root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactList_Container__yq5my\",\"ListContainer\":\"ContactList_ListContainer__2D4QJ\",\"Contact\":\"ContactList_Contact__3hm1t\",\"DeleteBtn\":\"ContactList_DeleteBtn__32ZmF\",\"ContactInfo\":\"ContactList_ContactInfo__3oMq8\",\"ContactListItemFadeEnter\":\"ContactList_ContactListItemFadeEnter__1xymL\",\"ContactListItemFadeEnterActive\":\"ContactList_ContactListItemFadeEnterActive__1RUbl\",\"ContactListItemFadeExit\":\"ContactList_ContactListItemFadeExit__34x8J\",\"ContactListItemFadeExitActive\":\"ContactList_ContactListItemFadeExitActive__eZ8VX\",\"ContactListItemFadeAppear\":\"ContactList_ContactListItemFadeAppear__2nmIi\",\"ContactListItemFadeAppearActive\":\"ContactList_ContactListItemFadeAppearActive__C12bO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__2WGM2\",\"InputName\":\"ContactForm_InputName__QL-Yw\",\"FormInput\":\"ContactForm_FormInput__3zx0E\",\"FormBtn\":\"ContactForm_FormBtn__2lLdS\",\"ContactFormNotificationFadeEnter\":\"ContactForm_ContactFormNotificationFadeEnter__1b1CZ\",\"ContactFormNotificationFadeEnterActive\":\"ContactForm_ContactFormNotificationFadeEnterActive__1vZus\",\"ContactFormNotificationFadeExit\":\"ContactForm_ContactFormNotificationFadeExit__24wm5\",\"ContactFormNotificationFadeExitActive\":\"ContactForm_ContactFormNotificationFadeExitActive__ZayGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__1ayzY\",\"InputContainer\":\"Filter_InputContainer__2_3KN\",\"FilterInput\":\"Filter_FilterInput__2af5D\",\"FilterHeader\":\"Filter_FilterHeader__2O33F\",\"FilterFadeEnter\":\"Filter_FilterFadeEnter__1090j\",\"FilterFadeEnterActive\":\"Filter_FilterFadeEnterActive__3hMW_\",\"FilterFadeExit\":\"Filter_FilterFadeExit__PIcVr\",\"FilterFadeExitActive\":\"Filter_FilterFadeExitActive__2VyIf\"};"],"sourceRoot":""}