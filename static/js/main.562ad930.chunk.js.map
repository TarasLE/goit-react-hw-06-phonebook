{"version":3,"sources":["App.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Contactform/ContactForm.module.css","components/Filter/Filter.module.css","components/Notification/Notification.js","components/Contactform/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Notification","sameContact","className","styles","ContactForm","state","name","number","alert","handleContact","event","currentTarget","value","setState","handleSubmit","preventDefault","checkContact","contact","id","shortid","generate","props","addContact","clearInput","contacts","length","find","toLowerCase","alertState","setTimeout","Container","type","this","onChange","FormInput","onClick","FormBtn","CSSTransition","in","timeout","classNames","enter","ContactFormNotificationFadeEnter","enterActive","ContactFormNotificationFadeEnterActive","exit","ContactFormNotificationFadeExit","exitActive","ContactFormNotificationFadeExitActive","unmountOnExit","Component","defaultProps","ContactList","deleteContact","TransitionGroup","component","classnames","ListContainer","map","ContactListItemFadeEnter","ContactListItemFadeEnterActive","ContactListItemFadeExit","ContactListItemFadeExitActive","Contact","ContactInfo","DeleteBtn","Filter","filter","FilterFadeEnter","FilterFadeEnterActive","FilterFadeExit","FilterFadeExitActive","InputContainer","FilterHeader","FilterInput","App","contactId","prevState","contactFilter","prevProps","localStorage","setItem","JSON","stringify","localContacts","getItem","parsedLocalContacts","parse","normalizedFilter","filteredElements","includes","appear","HeaderFadeAppear","appearActive","HeaderFadeAppearActive","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.562ad930.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__1-2fn\",\"HeaderFadeAppear\":\"App_HeaderFadeAppear__3E4mt\",\"HeaderFadeAppearActive\":\"App_HeaderFadeAppearActive__2fiqr\",\"ContactListFadeEnter\":\"App_ContactListFadeEnter__3dAJ3\",\"ContactListFadeEnterActive\":\"App_ContactListFadeEnterActive__DwQqA\",\"ContactListFadeExit\":\"App_ContactListFadeExit__vDFe7\",\"ContactListFadeExitActive\":\"App_ContactListFadeExitActive__3LjRR\",\"ContactListFadeAppear\":\"App_ContactListFadeAppear__2dl2Q\",\"ContactListFadeAppearActive\":\"App_ContactListFadeAppearActive__DMDdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactList_Container__yq5my\",\"ListContainer\":\"ContactList_ListContainer__2D4QJ\",\"Contact\":\"ContactList_Contact__3hm1t\",\"DeleteBtn\":\"ContactList_DeleteBtn__32ZmF\",\"ContactInfo\":\"ContactList_ContactInfo__3oMq8\",\"ContactListItemFadeEnter\":\"ContactList_ContactListItemFadeEnter__1xymL\",\"ContactListItemFadeEnterActive\":\"ContactList_ContactListItemFadeEnterActive__1RUbl\",\"ContactListItemFadeExit\":\"ContactList_ContactListItemFadeExit__34x8J\",\"ContactListItemFadeExitActive\":\"ContactList_ContactListItemFadeExitActive__eZ8VX\",\"ContactListItemFadeAppear\":\"ContactList_ContactListItemFadeAppear__2nmIi\",\"ContactListItemFadeAppearActive\":\"ContactList_ContactListItemFadeAppearActive__C12bO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__5FXDT\",\"FormBtn\":\"Notification_FormBtn__161H0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__2WGM2\",\"InputName\":\"ContactForm_InputName__QL-Yw\",\"FormInput\":\"ContactForm_FormInput__3zx0E\",\"FormBtn\":\"ContactForm_FormBtn__2lLdS\",\"ContactFormNotificationFadeEnter\":\"ContactForm_ContactFormNotificationFadeEnter__1b1CZ\",\"ContactFormNotificationFadeEnterActive\":\"ContactForm_ContactFormNotificationFadeEnterActive__1vZus\",\"ContactFormNotificationFadeExit\":\"ContactForm_ContactFormNotificationFadeExit__24wm5\",\"ContactFormNotificationFadeExitActive\":\"ContactForm_ContactFormNotificationFadeExitActive__ZayGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__1ayzY\",\"InputContainer\":\"Filter_InputContainer__2_3KN\",\"FilterInput\":\"Filter_FilterInput__2af5D\",\"FilterHeader\":\"Filter_FilterHeader__2O33F\",\"FilterFadeEnter\":\"Filter_FilterFadeEnter__1090j\",\"FilterFadeEnterActive\":\"Filter_FilterFadeEnterActive__3hMW_\",\"FilterFadeExit\":\"Filter_FilterFadeExit__PIcVr\",\"FilterFadeExitActive\":\"Filter_FilterFadeExitActive__2VyIf\"};","import React, { Component } from 'react'\r\nimport styles from './Notification.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nNotification.propTypes = {\r\n    sameContact: PropTypes.string.isRequired,\r\n}\r\n\r\nfunction Notification({ sameContact }) {\r\n    return (\r\n        <div className={styles.Notification}>\r\n            <h2>{sameContact} is already in contacts</h2>\r\n            <h3>Please check name and try again</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport './ContactForm.css'\r\nimport Notification from '../Notification/Notification'\r\n\r\nexport default class ContactForm extends Component {\r\n    static defaultProps = { addContact: '' }\r\n    static propTypes = {}\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.addContact(contact)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (this.props.contacts.length == 0) {\r\n            return\r\n        } else if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() ===\r\n                        this.state.name.toLowerCase() &&\r\n                    contact.number.toLowerCase() ===\r\n                        this.state.number.toLowerCase()\r\n                )\r\n            })\r\n        ) {\r\n            this.setState({ alert: true })\r\n            this.alertState()\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        setTimeout(() => {\r\n            this.setState({ alert: false })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.handleSubmit}\r\n                    className={styles.FormBtn}\r\n                >\r\n                    Add contact\r\n                </button>\r\n                <CSSTransition\r\n                    in={this.state.alert}\r\n                    timeout={250}\r\n                    classNames={{\r\n                        enter: styles.ContactFormNotificationFadeEnter,\r\n                        enterActive:\r\n                            styles.ContactFormNotificationFadeEnterActive,\r\n                        exit: styles.ContactFormNotificationFadeExit,\r\n                        exitActive:\r\n                            styles.ContactFormNotificationFadeExitActive,\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <Notification sameContact={this.state.name}></Notification>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nimport './ContactList.css'\r\n\r\nexport default function ContactList({ contacts, deleteContact }) {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <TransitionGroup component=\"ul\" classnames={styles.ListContainer}>\r\n                {contacts.map((contact) => (\r\n                    <CSSTransition\r\n                        timeout={250}\r\n                        classNames={{\r\n                            enter: styles.ContactListItemFadeEnter,\r\n                            enterActive: styles.ContactListItemFadeEnterActive,\r\n                            exit: styles.ContactListItemFadeExit,\r\n                            exitActive: styles.ContactListItemFadeExitActive,\r\n                        }}\r\n                        key={contact.id}\r\n                    >\r\n                        <li className={styles.Contact}>\r\n                            <span className={styles.ContactInfo}>\r\n                                {contact.name} : {contact.number}\r\n                            </span>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => deleteContact(contact.id)}\r\n                                className={styles.DeleteBtn}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </li>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './Filter.module.css'\r\n\r\nexport default function Filter({ contacts, value, filter }) {\r\n    return (\r\n        <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={{\r\n                enter: styles.FilterFadeEnter,\r\n                enterActive: styles.FilterFadeEnterActive,\r\n                exit: styles.FilterFadeExit,\r\n                exitActive: styles.FilterFadeExitActive,\r\n            }}\r\n        >\r\n            <div className={styles.Container}>\r\n                <label className={styles.InputContainer}>\r\n                    <span className={styles.FilterHeader}>\r\n                        Find contacts by Name\r\n                    </span>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={filter}\r\n                        className={styles.FilterInput}\r\n                    />\r\n                </label>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n}\r\n","import React, { Component } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport ContactForm from './components/Contactform/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport styles from './App.module.css'\nimport './App.css'\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n    deleteContact = (contactId) => {\n        this.setState((prevState) => ({\n            contacts: prevState.contacts.filter(\n                (contact) => contact.id != contactId\n            ),\n        }))\n        if (this.state.contacts.length == 2) {\n            this.setState({ filter: '' })\n        }\n    }\n\n    addContact = (contact) => {\n        this.setState((prevState) => ({\n            contacts: [contact, ...prevState.contacts],\n        }))\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts)\n            )\n        }\n    }\n\n    componentDidMount() {\n        const localContacts = localStorage.getItem('contacts')\n        const parsedLocalContacts = JSON.parse(localContacts)\n        if (parsedLocalContacts) {\n            this.setState({ contacts: parsedLocalContacts })\n        }\n    }\n\n    contactFilter = (event) => {\n        this.setState({ filter: event.currentTarget.value })\n    }\n\n    render() {\n        const normalizedFilter = this.state.filter.toLowerCase()\n        const filteredElements = this.state.contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizedFilter)\n        )\n        return (\n            <div className={styles.Container}>\n                <CSSTransition\n                    in={true}\n                    appear={true}\n                    timeout={500}\n                    classNames={{\n                        appear: styles.HeaderFadeAppear,\n                        appearActive: styles.HeaderFadeAppearActive,\n                    }}\n                >\n                    <h1>Phonebook</h1>\n                </CSSTransition>\n\n                <ContactForm\n                    addContact={this.addContact}\n                    contacts={this.state.contacts}\n                />\n\n                <CSSTransition\n                    in={this.state.contacts.length >= 1}\n                    timeout={0}\n                    unmountOnExit\n                >\n                    <Filter\n                        contacts={this.state.contacts}\n                        value={this.state.filter}\n                        filter={this.contactFilter}\n                    />\n                </CSSTransition>\n                <CSSTransition\n                    in={this.state.contacts.length > 0}\n                    timeout={250}\n                    unmountOnExit\n                >\n                    <ContactList\n                        contacts={filteredElements}\n                        deleteContact={this.deleteContact}\n                    />\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}